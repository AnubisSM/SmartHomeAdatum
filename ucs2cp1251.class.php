<?phpfunction CP1251toUTF8($string){$out = '';for ($i = 0; $i<strlen($string); ++$i){$ch = ord($string{$i});if ($ch < 0x80) $out .= chr($ch);elseif ($ch >= 0xC0)if ($ch < 0xF0)$out .= "\xD0".chr(0x90 + $ch - 0xC0); // À-ß, à-ï (A-YA, a-p)else $out .= "\xD1".chr(0x80 + $ch - 0xF0); // ð-ÿ (r-ya)elseswitch($ch){case 0xA8: $out .= "\xD0\x81"; break; // YOcase 0xB8: $out .= "\xD1\x91"; break; // yo// ukrainiancase 0xA1: $out .= "\xD0\x8E"; break; // ¡ (U)case 0xA2: $out .= "\xD1\x9E"; break; // ¢ (u)case 0xAA: $out .= "\xD0\x84"; break; // ª (e)case 0xAF: $out .= "\xD0\x87"; break; // ¯ (I..)case 0xB2: $out .= "\xD0\x86"; break; // I (I)case 0xB3: $out .= "\xD1\x96"; break; // i (i)case 0xBA: $out .= "\xD1\x94"; break; // º (e)case 0xBF: $out .= "\xD1\x97"; break; // ¿ (i..)// chuvashiancase 0x8C: $out .= "\xD3\x90"; break; // ? (A)case 0x8D: $out .= "\xD3\x96"; break; // ? (E)case 0x8E: $out .= "\xD2\xAA"; break; // ? (SCH)case 0x8F: $out .= "\xD3\xB2"; break; // ? (U)case 0x9C: $out .= "\xD3\x91"; break; // ? (a)case 0x9D: $out .= "\xD3\x97"; break; // ? (e)case 0x9E: $out .= "\xD2\xAB"; break; // ? (sch)case 0x9F: $out .= "\xD3\xB3"; break; // ? (u)}}return $out;}function utf8_to_win($string){$out="";	for ($c=0;$c<strlen($string);$c++)	{			$i=ord($string[$c]);			if ($i <= 127) @$out .= $string[$c];			if (@$byte2)		{			$new_c2=($c1&3)*64+($i&63);			$new_c1=($c1>>2)&5;			$new_i=$new_c1*256+$new_c2;			if ($new_i==1025){$out_i=168;} else {if ($new_i==1105){$out_i=184;} else {$out_i=$new_i-848;}}			@$out .= chr($out_i);			$byte2 = false;		}	if (($i>>5)==6) {$c1 = $i;$byte2 = true;}	}return $out;}function cp1251_2ucs2($str){        $ucs2="";        for ($i=0; $i<strlen($str); $i++)		{   if (ord($str[$i]) < 127) {$results = sprintf("00%X",ord($str[$i]));}			elseif (ord($str[$i])==184){$results="0451";}			elseif (ord($str[$i])==168){$results="0401";}			else{$results = sprintf("0%X",(ord($str[$i])-192+1040));}            $ucs2.= $results;        }        return $ucs2;}function ucs2_2cp1251($str){$ret ="";    for ($i=0;$i<strlen($str);$i+=4){        $char=hexdec($str[$i].$str[$i+1].$str[$i+2].$str[$i+3]);        if ($char>126)		{            if ($char==1105){$char=184;}			elseif($char==1025){$char=168;}			elseif ($char>=848){$char-=848;}        }		elseif(!$char){$char=32;}        $ret.=chr($char);    }    return $ret;}function bit7_2cp1251($strings){$bine="";$sa="";$biner="";$sar="";$cnul="";for ($i=strlen($strings)-1;$i>=1;$i-=2){$bine = $strings[$i-1].$strings[$i];$sa.=$bine;	}//echo $sa."<br>";$bine = base_convert($sa, 16, 2);if(!is_integer(strlen($strings)/7)){$colnul=abs(strlen($strings)-(floor(strlen($strings)/7)*7)-7);//echo $colnul;for ($ti=0; $ti<=$colnul; $ti++) { $cnul.="0";}$bine=$cnul.$bine;}//echo $bine."<br>";for ($i=strlen($bine)-1;$i>=6;$i-=7){$asm = $bine[$i-6].$bine[$i-5].$bine[$i-4].$bine[$i-3].$bine[$i-2].$bine[$i-1].$bine[$i];$asm;$biner = chr(base_convert($asm,2,10));//echo $biner;$sar.=$biner;}//echo $sar;	    return $sar;}function ATSMS($numb, $text){        $result = "001100";				        $lennum = "";					        $num = dechex(strlen($numb));        if ((strlen($num)%2)>0){$lennum .= "0".$num;}        else{$lennum .= $num;}            $result .= $lennum."91"; 		        if ((strlen($numb)%2)>0){$numb .= "F";}        $i = 0;        while ($i<strlen($numb)){$result .= $numb[$i+1] . $numb[$i];$i += 2;}		if (strlen(cp1251_2ucs2($text))<30){$lentext = sprintf("0%X",strlen(cp1251_2ucs2($text))/2);}		else{$lentext = sprintf("%X",strlen(cp1251_2ucs2($text))/2);}        $result .= "0008AA".$lentext.cp1251_2ucs2($text);		$resu = ((strlen($result))-2)/2;	        return $resu;    }function sendSMS($smsc_numb, $numb, $text){			        $lennum = "";					        $num = dechex(strlen($numb));        if ((strlen($num)%2)>0){$lennum = "0".$num;}        else{$lennum = $num;}           // $result = "0791"; 		    $result = ""; 			        if ((strlen($smsc_numb)%2)>0){$smsc_numb .= "F";}        $i = 0;		if($smsc_numb){        while ($i<strlen($smsc_numb)){		$result .= $smsc_numb[$i+1] . $smsc_numb[$i];		$i += 2;		}		}						if($smsc_numb){		$result .= "1100".$lennum."91";		}		else{$result .= "001100".$lennum."91";}		if ((strlen($numb)%2)>0){$numb .= "F";}        $i = 0;        while ($i<strlen($numb)){$result .= $numb[$i+1] . $numb[$i];$i += 2;}				if (strlen(cp1251_2ucs2($text))<30){$lentext = sprintf("0%X",strlen(cp1251_2ucs2($text))/2);}		else{$lentext = sprintf("%X",strlen(cp1251_2ucs2($text))/2);}        $result .= "0008AA".$lentext.cp1251_2ucs2($text);			$resu = strtoupper($result);		        return $resu;    }		function sms_decode($sm){	$re ="";	$num898 = strlen($sm);		$rest898 = substr($sm, 54, $num898);	if(substr($sm, 36, 2)=="08"){$s = ucs2_2cp1251($rest898);}	else if(substr($sm, 36, 2)=="00"){$s = bit7_2cp1251($rest898);}	else {$s = "Invalid Format";}		$rest2 = substr($sm, 22, 12);	$result =""; $i = 0;	while ($i<strlen($rest2)){$result .= $rest2[$i+1] . $rest2[$i];$i += 2;}	$result = substr($result, 0, 11);	return array ($result, $s);  //  $re .= "sms,".$result.",".$s;//	return	$re;}function dev_detect($namedev){$nameporte='';$numporte='';$usb = glob("/dev/ttyUSB*", GLOB_NOSORT);natsort($usb);foreach ($usb as $row) {$los = substr($row, 5);$numport = substr($row, 11);exec('dmesg | grep '.$los.' ', $results); foreach ($results as $row) {$pos = strpos($row, ": ");$nameport = substr($row, $pos+2,-24);}if($namedev && strstr($nameport, $namedev)){$numporte=$numport;$nameporte=$nameport;}}return array ($nameporte, $numporte);}?>